// Mosaic

//@Begin_vertex
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 position;

uniform mat3 projectionMatrix;
uniform mat3 transformMatrix;
uniform mat3 objectMatrix;
uniform mat3 textureMatrix;

out vec2 textureCoordinate;

void main()
{
    vec3 pos = vec3(position, 1.0);
    textureCoordinate = (textureMatrix * pos).xy;
    gl_Position = vec4(projectionMatrix * transformMatrix * objectMatrix * pos, 1.0);
}
//@End
//@Begin_fragment
//version_####
#ifdef GL_ES
 precision mediump float;
#endif
in vec2 textureCoordinate;

uniform float fX;
uniform float fY;
uniform float fOx;
uniform float fOy;


uniform sampler2D bckgTexture;

uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;

out vec4 fragColor;

void main(void)
{
// Is pixel base
    float x = float(int((textureCoordinate.x-fOx)*fX))/fX+fOx;
    float y = float(int((textureCoordinate.y-fOy)*fY))/fY+fOy;

    vec4 color = texture(bckgTexture,vec2(x, 1.0-y));

    color *= blendColor;

    fragColor = color;
}
//@End