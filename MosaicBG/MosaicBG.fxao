// Mosaic

//@Begin_vertex
#ifdef GL_ES
 precision mediump float;
#endif
uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;

attribute vec4 position;
attribute vec2 texCoord;
varying vec2 textureCoordinate;

void main(void)
{
	textureCoordinate = texCoord;
	gl_Position = projectionMatrix * transformMatrix * position;
}
//@End
//@Begin_fragment
#ifdef GL_ES
 precision mediump float;
#endif
varying vec2 textureCoordinate;


uniform float fX;
uniform float fY;
uniform float fOx;
uniform float fOy;


uniform sampler2D bckgTexture;

uniform lowp vec4 blendColor;
uniform float fPixelWidth;
uniform float fPixelHeight;


void main(void)
{
// Is pixel base
    float x = float(int((textureCoordinate.x-fOx/fPixelWidth)*fX));
    float y = float(int((textureCoordinate.y-fOy/fPixelHeight)*fY));


    vec4 color = texture2D(bckgTexture,vec2((x/fX + fOx/fPixelWidth), 1.0-(y/fY + fOy/fPixelHeight)));

    color *= blendColor;

    gl_FragColor = color;
}
//@End